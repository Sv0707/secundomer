{"version":3,"sources":["components/App/App.module.css","components/App/App.js","index.js"],"names":["module","exports","App","useState","time","setTime","timerOn","setTimerOn","useEffect","startInterval","interval","pipe","startWith","scan","share","subscribe","value","unsubscribe","className","s","timeWrapper","Math","floor","slice","buttonWrapper","Button","onClick","button","onDoubleClick","timer","first","ReactDom","render","StrictMode","document","querySelector"],"mappings":"4FACAA,EAAOC,QAAU,CAAC,YAAc,yBAAyB,cAAgB,2BAA2B,OAAS,sB,4KC0D9FC,EApDH,WACV,MAAwBC,mBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KAEAC,qBAAU,WACR,IAAMC,EAAgBC,YAAS,KAC5BC,KACCC,YAAUR,GACVS,aAAK,SAACT,GAAD,OAAUA,EAAO,OACtBU,eAEDC,WAAU,SAACC,GACVV,GAAWD,EAAQW,MAEvB,OAAO,kBAAMP,EAAcQ,iBAC1B,CAACb,EAAME,IAeV,OACE,gCACE,sBAAKY,UAAWC,IAAEC,YAAlB,UACE,kCAAQ,IAAMC,KAAKC,MAAOlB,EAAO,KAAW,KAAKmB,OAAO,GAAxD,QACA,kCAAQ,IAAMF,KAAKC,MAAOlB,EAAO,IAAS,KAAKmB,OAAO,GAAtD,QACA,gCAAQ,IAAMF,KAAKC,MAAOlB,EAAO,IAAQ,KAAKmB,OAAO,QAEvD,sBAAKL,UAAWC,IAAEK,cAAlB,UACE,cAACC,EAAA,EAAD,CAAQC,QArBY,WACxBnB,GAAYD,GACZA,GAAWD,EAAQ,IAmBqBa,UAAWC,IAAEQ,OAAjD,SACGrB,EAAU,OAAS,UAEtB,cAACmB,EAAA,EAAD,CAAQG,cAnBY,WACxBC,YAAM,KACHlB,KAAKmB,eACLf,WAAU,WACTR,GAAW,OAe+BW,UAAWC,IAAEQ,OAAvD,kBAGA,cAACF,EAAA,EAAD,CAAQC,QAAS,kBAAMrB,EAAQ,IAAIa,UAAWC,IAAEQ,OAAhD,0BC/CRI,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,cAAc,Y","file":"static/js/main.ea1c9179.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"timeWrapper\":\"App_timeWrapper__234aV\",\"buttonWrapper\":\"App_buttonWrapper__1PohD\",\"button\":\"App_button__3m37m\"};","import { useState, useEffect } from \"react\";\nimport { interval, timer } from \"rxjs\";\nimport { first, scan, share, startWith } from \"rxjs/operators\";\nimport Button from \"react-bootstrap/Button\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport s from \"./App.module.css\";\n\nconst App = () => {\n  const [time, setTime] = useState(0);\n  const [timerOn, setTimerOn] = useState(false);\n\n  useEffect(() => {\n    const startInterval = interval(1000)\n      .pipe(\n        startWith(time),\n        scan((time) => time + 1000),\n        share()\n      )\n      .subscribe((value) => {\n        timerOn && setTime(value);\n      });\n    return () => startInterval.unsubscribe();\n  }, [time, timerOn]);\n\n  const toggleButtonClick = () => {\n    setTimerOn(!timerOn);\n    timerOn && setTime(0);\n  };\n\n  const handleDoubleClick = () => {\n    timer(300)\n      .pipe(first())\n      .subscribe(() => {\n        setTimerOn(false);\n      });\n  };\n\n  return (\n    <div>\n      <div className={s.timeWrapper}>\n        <span>{(\"0\" + Math.floor((time / 3600000) % 60)).slice(-2)}: </span>\n        <span>{(\"0\" + Math.floor((time / 60000) % 60)).slice(-2)}: </span>\n        <span>{(\"0\" + Math.floor((time / 1000) % 60)).slice(-2)}</span>\n      </div>\n      <div className={s.buttonWrapper}>\n        <Button onClick={toggleButtonClick} className={s.button}>\n          {timerOn ? \"Stop\" : \"Start\"}\n        </Button>\n        <Button onDoubleClick={handleDoubleClick} className={s.button}>\n          Wait\n        </Button>\n        <Button onClick={() => setTime(0)} className={s.button}>\n          Reset\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDom from \"react-dom\";\nimport App from \"./components/App/App\";\n\nReactDom.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.querySelector(\"#root\")\n);\n"],"sourceRoot":""}